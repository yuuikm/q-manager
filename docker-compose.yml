services:
  # === Database ===
  db:
    image: mysql:8.0
    container_name: q-manager-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: q_manager
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypassword
      MYSQL_ROOT_HOST: '%'
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - q-manager-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # === phpMyAdmin ===
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: q-manager-phpmyadmin
    restart: always
    environment:
      PMA_HOST: db
      PMA_USER: root
      PMA_PASSWORD: rootpassword
      PMA_PORT: 3306
    ports:
      - "8080:80"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - q-manager-network

  # === Backend (Laravel) ===
  backend:
    build: ./q-manager-back
    container_name: q-manager-backend
    working_dir: /var/www
    volumes:
      - ./q-manager-back:/var/www
      - /var/www/vendor
      - /var/www/node_modules
    environment:
      # Override .env file settings for Docker
      DB_HOST: db
      DB_CONNECTION: mysql
      DB_PORT: 3306
      DB_DATABASE: q_manager
      DB_USERNAME: myuser
      DB_PASSWORD: mypassword
      APP_ENV: local
      APP_DEBUG: "true"
      APP_KEY: base64:vQoE7tekihrKSB7Y0PUAoeRpXCDADQ8blRwc9Ubvi7w=
    command: >
      sh -c "composer install --no-interaction &&
             php artisan key:generate --no-interaction &&
             php artisan serve --host=0.0.0.0 --port=8000"
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - q-manager-network
    restart: unless-stopped

  # === Frontend (React) ===
  frontend:
    image: node:22.19.0-alpine
    container_name: q-manager-frontend
    working_dir: /app
    volumes:
      - ./q-manager-front:/app
      - /app/node_modules
    command: >
      sh -c "npm install --no-audit &&
             npm run dev -- --host 0.0.0.0 --port 5173"
    ports:
      - "5173:5173"
    depends_on:
      - backend
    networks:
      - q-manager-network
    restart: unless-stopped
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true

  # === Admin (React) ===
  admin:
    image: node:22.19.0-alpine
    container_name: q-manager-admin
    working_dir: /app
    volumes:
      - ./q-manager-admin:/app
      - /app/node_modules
    command: >
      sh -c "npm install --no-audit &&
             npm run dev -- --host 0.0.0.0 --port 5174"
    ports:
      - "5174:5174"
    depends_on:
      - backend
    networks:
      - q-manager-network
    restart: unless-stopped
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true

volumes:
  mysql_data:
    driver: local

networks:
  q-manager-network:
    driver: bridge
